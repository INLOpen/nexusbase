name: "Go Building & Testing"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
          fetch-depth: 0
    - name: "Check for .go file changes"
      id: check_changes
      run: |
          if git diff --name-only HEAD HEAD~1 | grep -q '.go$'; then
            echo "Changes in .go files detected. Proceeding..."
            echo "go_changes_detected=true" >> "$GITHUB_OUTPUT"
          else
            echo "No changes in .go files. Skipping..."
            echo "go_changes_detected=false" >> "$GITHUB_OUTPUT"
          fi
    - name: Set up Go
      if: steps.check_changes.outputs.go_changes_detected == 'true'
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
    - name: Build
      if: steps.check_changes.outputs.go_changes_detected == 'true'
      run: go build -v ./...

    - name: Test
      if: steps.check_changes.outputs.go_changes_detected == 'true'
      run: go test -v -timeout 120s ./...

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
          fetch-depth: 0
    - name: Check for .go file changes
      id: check_changes
      shell: pwsh
      run: |
        # Compare the last two commits to see what files changed
        $changes = git diff --name-only HEAD HEAD~1
        # If any of the changed files end with .go, set output to true
        if ($changes -match '\.go$') {
          Write-Host "Changes in .go files detected. Proceeding..."
          echo "go_changes_detected=true" >> "$env:GITHUB_OUTPUT"
        } else {
          Write-Host "No changes in .go files. Skipping..."
          echo "go_changes_detected=false" >> "$env:GITHUB_OUTPUT"
        }

    - name: Set up Go
      if: steps.check_changes.outputs.go_changes_detected == 'true'
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build
      if: steps.check_changes.outputs.go_changes_detected == 'true'
      run: go build -v ./...

    - name: Test
      if: steps.check_changes.outputs.go_changes_detected == 'true'
      run: go test -race -timeout 180s -v ./...